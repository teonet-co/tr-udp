# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

#workflows:
version: 2
jobs:
    
  un-tagged-build:
    machine: true
    steps:
      - checkout
      - git submodule update --init

      # show current variables
      - run: echo $CIRCLE_PROJECT_REPONAME
      - run: echo $CIRCLE_BRANCH
      - run: echo $CIRCLE_TAG
      
#      # build the application image
#      - run: docker build --no-cache -t $CIRCLE_PROJECT_REPONAME -f docker/Dockerfile . 
#
#      # Check created image
#      - run: docker run -it --rm --name $CIRCLE_PROJECT_REPONAME $CIRCLE_PROJECT_REPONAME node . -?
#      
#      # This is place for run unit tests from docker container


  tagged-build:
    machine: true
    steps:
      - checkout
      - run: git submodule update --init

      # show current variables
      - run: echo $CIRCLE_PROJECT_REPONAME
      - run: echo $CIRCLE_BRANCH
      - run: echo $CIRCLE_TAG

#      # build the application image
#      - run: docker build --no-cache -t $CIRCLE_PROJECT_REPONAME -f docker/Dockerfile . 
#
#      # Check created image
#      - run: docker run -it --rm --name $CIRCLE_PROJECT_REPONAME $CIRCLE_PROJECT_REPONAME node . -?
#
#      # deploy the image
#      - run: docker tag $CIRCLE_PROJECT_REPONAME gitlab.ksproject.org:5000/teonet/wg/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
#      - run: docker push gitlab.ksproject.org:5000/teonet/wg/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
#      #
#      - run: docker tag $CIRCLE_PROJECT_REPONAME gitlab.ksproject.org:5000/teonet/wg/$CIRCLE_PROJECT_REPONAME:latest
#      - run: docker push gitlab.ksproject.org:5000/teonet/wg/$CIRCLE_PROJECT_REPONAME:latest
                    
                    
  testing: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands 
       - run: echo Run tests of $CIRCLE_PROJECT_REPONAME project
#      - checkout # special step to check out source code to working directory
#      - run:
#          name: update-npm 
#          command: 'sudo npm install -g npm@latest'
#      - restore_cache: # special step to restore the dependency cache 
#          key: dependency-cache-{{ checksum "package.json" }}
#      - run:
#          name: install-npm-wee
#          command: npm install
#      - save_cache: # special step to save the dependency cache
#          key: dependency-cache-{{ checksum "package.json" }}
#          paths:
#            - ./node_modules
#      - run: # run tests
#          name: test
#          command: npm test                    
                    
workflows:
  version: 2
  build:
    jobs:
      - testing
      
      - un-tagged-build:
          requires:
            - testing
          filters:
            tags:
                ignore: /^v.*/
                
      - tagged-build:
#          requires:
#            - testing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          